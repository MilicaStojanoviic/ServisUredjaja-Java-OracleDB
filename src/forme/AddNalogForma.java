/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domeni.Klijent;
import domeni.Marka;
import domeni.RadniNalog;
import domeni.Radnik;
import domeni.Radnja;
import domeni.Uredjaj;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import kontroler.Controller;

/**
 *
 * @author Lenovo
 */
public class AddNalogForma extends javax.swing.JFrame {

    String operation;
    RadniNalogForma parent;
    RadniNalog n;
    /**
     * Creates new form AddNalogForma
     */
    public AddNalogForma(RadniNalogForma parent, boolean modal, RadniNalog n, String operation) {
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.parent = parent;
        this.n = n;
        this.operation = operation;
        
        fillCmbMarka();
        fillCmbKlijent();
        fillCmbRadnik();
        fillCmbRadnja();
        fillCmbUredjaj();
        
        if (operation.equals("UPDATE")) {
            adjustFields(n);
        } 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtDodatneInfo = new javax.swing.JTextField();
        txtNapomena = new javax.swing.JTextField();
        txtOpisGreske = new javax.swing.JTextField();
        txtDatPrometa = new javax.swing.JTextField();
        txtDatIzvrsenja = new javax.swing.JTextField();
        txtDatIzdavanja = new javax.swing.JTextField();
        txtKomentarIzvrs = new javax.swing.JTextField();
        txtIznos = new javax.swing.JTextField();
        cmbKlijent = new javax.swing.JComboBox();
        cmbRadnik = new javax.swing.JComboBox();
        cmbRadnja = new javax.swing.JComboBox();
        cmbUredjaj = new javax.swing.JComboBox();
        cmbMarka = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));

        jLabel1.setText("Datum izdavanja:");

        jLabel2.setText("Datum izvrsenja:");

        jLabel3.setText("Datum prometa:");

        jLabel4.setText("Opis greske:");

        jLabel5.setText("Napomena:");

        jLabel6.setText("Dodatne informacije:");

        jLabel7.setText("Komentar izvrsioca:");

        jLabel8.setText("Klijent:");

        jLabel9.setText("Radnik:");

        jLabel10.setText("Radnja:");

        jLabel11.setText("Uredjaj:");

        jLabel12.setText("Marka uredjaja:");

        jLabel13.setText("Iznos:");

        txtOpisGreske.setText("Opis");

        txtDatPrometa.setText("2023-02-09");

        txtDatIzvrsenja.setText("2023-02-09");

        txtDatIzdavanja.setText("2023-02-09");

        cmbKlijent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbRadnik.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbRadnja.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbUredjaj.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbMarka.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnAdd.setText("Dodaj nalog");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDodatneInfo)
                            .addComponent(txtNapomena)
                            .addComponent(txtOpisGreske)
                            .addComponent(txtDatPrometa)
                            .addComponent(txtDatIzdavanja, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                            .addComponent(txtDatIzvrsenja)
                            .addComponent(txtKomentarIzvrs)
                            .addComponent(cmbKlijent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbRadnik, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbRadnja, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbUredjaj, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbMarka, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtIznos))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDatIzdavanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDatIzvrsenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDatPrometa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtOpisGreske, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNapomena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDodatneInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtKomentarIzvrs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cmbKlijent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cmbRadnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cmbRadnja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cmbUredjaj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cmbMarka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIznos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(btnAdd)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            if (this.operation.equals("INSERT")) {
                this.insert();
            } else if (this.operation.equals("UPDATE")) {
                this.update();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska sta se desava bre", JOptionPane.ERROR_MESSAGE);
            adjustFields(n);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JComboBox cmbKlijent;
    private javax.swing.JComboBox cmbMarka;
    private javax.swing.JComboBox cmbRadnik;
    private javax.swing.JComboBox cmbRadnja;
    private javax.swing.JComboBox cmbUredjaj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtDatIzdavanja;
    private javax.swing.JTextField txtDatIzvrsenja;
    private javax.swing.JTextField txtDatPrometa;
    private javax.swing.JTextField txtDodatneInfo;
    private javax.swing.JTextField txtIznos;
    private javax.swing.JTextField txtKomentarIzvrs;
    private javax.swing.JTextField txtNapomena;
    private javax.swing.JTextField txtOpisGreske;
    // End of variables declaration//GEN-END:variables

    private void fillCmbMarka() {
        try {
            cmbMarka.removeAllItems();
            List<Marka> marke = Controller.getInstance().getMarkeList();
            for (Marka marka : marke) {
                cmbMarka.addItem(marka);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greska prilikom ucitavanja marke!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fillCmbKlijent() {
        try {
            cmbKlijent.removeAllItems();
            List<Klijent> klijenti = Controller.getInstance().getKlijentiList();
            for (Klijent klijent : klijenti) {
                cmbKlijent.addItem(klijent);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greska prilikom ucitavanja klijenata!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fillCmbRadnik() {
        try {
            cmbRadnik.removeAllItems();
            List<Radnik> radnici = Controller.getInstance().getRadniciList();
            for (Radnik radnik : radnici) {
                cmbRadnik.addItem(radnik);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greska prilikom ucitavanja radnika!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fillCmbRadnja() {
        try {
            cmbRadnja.removeAllItems();
            List<Radnja> radnje = Controller.getInstance().getRadnjeList();
            for (Radnja radnja : radnje) {
                cmbRadnja.addItem(radnja);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greska prilikom ucitavanja radnje!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fillCmbUredjaj() {
        try {
            cmbUredjaj.removeAllItems();
            List<Uredjaj> uredjaji = Controller.getInstance().getUredjajiList();
            for (Uredjaj uredjaj : uredjaji) {
                cmbUredjaj.addItem(uredjaj);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greska prilikom ucitavanja uredjaja!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void adjustFields(RadniNalog n) {
        this.txtDatIzdavanja.setText(String.valueOf(n.getDatumIzdavanja()));
        this.txtDatIzvrsenja.setText(String.valueOf(n.getDatumIzvrsenja()));
        this.txtDatPrometa.setText(String.valueOf(n.getDatumPrometa()));
        this.txtDodatneInfo.setText(n.getDodatneInformacije());
        this.txtKomentarIzvrs.setText(n.getKomentarIzvrsioca());
        this.txtNapomena.setText(n.getNapomena());
        this.txtOpisGreske.setText(n.getOpisGreske());
        this.cmbKlijent.setSelectedItem(n.getKlijent());
        this.cmbMarka.setSelectedItem(n.getMarka());
        this.cmbRadnik.setSelectedItem(n.getRadnik());
        this.cmbRadnja.setSelectedItem(n.getRadnja());
        this.cmbUredjaj.setSelectedItem(n.getUredjaj());
        this.txtIznos.setText(String.valueOf(n.getUkupanIznos()));
        this.btnAdd.setText("Izmeni nalog");
    }

    private void insert() throws Exception {
        if(txtDatIzdavanja.getText().isEmpty() || txtOpisGreske.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Morate popuniti opis greske i datum izdavanja!");
            return;
        }
        
        String dIzdavanja = txtDatIzdavanja.getText();
        String dIzvrsenja = txtDatIzvrsenja.getText();
        String dPrometa = txtDatPrometa.getText();
        Date datumIzdavanja = new Date();
        Date datumIzvrsenja = new Date();
        Date datumPrometa = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
        sdf.setTimeZone(TimeZone.getTimeZone("UTC"));

        try {
            datumIzdavanja = sdf.parse(dIzdavanja);
            datumIzvrsenja = sdf.parse(dIzvrsenja);
            datumPrometa = sdf.parse(dPrometa);
        } catch (ParseException ex) {
            Logger.getLogger(AddNalogForma.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Datum mora biti u odgovarajucem formatu!");
            return;
        }
        
        String opis=txtOpisGreske.getText();
        String napomena=txtNapomena.getText();
        String dodatne=txtDodatneInfo.getText();
        String kom=txtKomentarIzvrs.getText();
        Klijent k=(Klijent) cmbKlijent.getSelectedItem();
        Radnik ra=(Radnik) cmbRadnik.getSelectedItem();
        Radnja rad=(Radnja) cmbRadnja.getSelectedItem();
        Uredjaj u=(Uredjaj) cmbUredjaj.getSelectedItem();
        Marka m=(Marka) cmbMarka.getSelectedItem();
        
        RadniNalog r=new RadniNalog();
        r.setDatumIzdavanja(datumIzdavanja);
        r.setDatumIzvrsenja(datumIzvrsenja);
        r.setDatumPrometa(datumPrometa);
        r.setDodatneInformacije(dodatne);
        r.setKomentarIzvrsioca(kom);
        r.setOpisGreske(opis);
        r.setNapomena(napomena);
        r.setKlijent(k);
        r.setRadnik(ra);
        r.setRadnja(rad);
        r.setUredjaj(u);
        r.setMarka(m);
        r.setUkupanIznos(0);
        
        Controller.getInstance().insert1(r);
        JOptionPane.showMessageDialog(this, "Uspesno dodat novi nalog!", "Uspesno", JOptionPane.INFORMATION_MESSAGE);
        parent.refreshTable();
        this.setVisible(false);
        dispose();
    }

    private void update() throws Exception {
        if(txtDatIzdavanja.getText().isEmpty() || txtOpisGreske.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Morate popuniti opis greske i datum izdavanja!");
            return;
        }
        
        String dIzdavanja = txtDatIzdavanja.getText();
        String dIzvrsenja = txtDatIzvrsenja.getText();
        String dPrometa = txtDatPrometa.getText();
        Date datumIzdavanja = new Date();
        Date datumIzvrsenja = new Date();
        Date datumPrometa = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
        sdf.setTimeZone(TimeZone.getTimeZone("UTC"));

        try {
            datumIzdavanja = sdf.parse(dIzdavanja);
            datumIzvrsenja = sdf.parse(dIzvrsenja);
            datumPrometa = sdf.parse(dPrometa);
        } catch (ParseException ex) {
            Logger.getLogger(AddNalogForma.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Datum mora biti u odgovarajucem formatu!");
            return;
        }
        
        String opis=txtOpisGreske.getText();
        String napomena=txtNapomena.getText();
        String dodatne=txtDodatneInfo.getText();
        String kom=txtKomentarIzvrs.getText();
        Klijent k=(Klijent) cmbKlijent.getSelectedItem();
        Radnik ra=(Radnik) cmbRadnik.getSelectedItem();
        Radnja rad=(Radnja) cmbRadnja.getSelectedItem();
        Uredjaj u=(Uredjaj) cmbUredjaj.getSelectedItem();
        Marka m=(Marka) cmbMarka.getSelectedItem();
        Double iznos = Double.parseDouble(txtIznos.getText());
        
        RadniNalog r=new RadniNalog();
        r.setBrojNaloga(n.getBrojNaloga());
        r.setDatumIzdavanja(datumIzdavanja);
        r.setDatumIzvrsenja(datumIzvrsenja);
        r.setDatumPrometa(datumPrometa);
        r.setDodatneInformacije(dodatne);
        r.setKomentarIzvrsioca(kom);
        r.setOpisGreske(opis);
        r.setNapomena(napomena);
        r.setKlijent(k);
        r.setRadnik(ra);
        r.setRadnja(rad);
        r.setUredjaj(u);
        r.setMarka(m);
        r.setUkupanIznos(iznos);
        
        if(!m.equals(n.getMarka())){
            r.setMarkaIzmena(true);
        }
        if (iznos != n.getUkupanIznos()) {
            r.setIzmenaIznos(true);
        }
        
        Controller.getInstance().update1(r);
        JOptionPane.showMessageDialog(this, "Uspesno izmenjen nalog!", "Uspesno", JOptionPane.INFORMATION_MESSAGE);
        parent.refreshTable();
        this.setVisible(false);
        dispose();
    }

    
}

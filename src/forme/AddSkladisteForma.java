/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domeni.Mesto;
import domeni.Skladiste;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import kontroler.Controller;

/**
 *
 * @author Lenovo
 */
public class AddSkladisteForma extends javax.swing.JFrame {

    String operation;
    Skladiste s;

    /**
     * Creates new form AddSkladisteForma
     */
    public AddSkladisteForma(Skladiste s, String operation) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.operation = operation;
        this.s = s;

        FillCmbMesto();

        if (operation.equals("UPDATE")) {
            adjustFields(s);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNazivFirme = new javax.swing.JTextField();
        txtPIB = new javax.swing.JTextField();
        txtAdresa = new javax.swing.JTextField();
        txtNaziv = new javax.swing.JTextField();
        cmbMesto = new javax.swing.JComboBox();
        btnDodaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));

        jLabel1.setText("Naziv:");

        jLabel2.setText("Adresa:");

        jLabel3.setText("Mesto:");

        jLabel4.setText("PIB:");

        jLabel5.setText("Naziv firme:");

        cmbMesto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNazivFirme)
                            .addComponent(txtPIB)
                            .addComponent(txtAdresa)
                            .addComponent(txtNaziv)
                            .addComponent(cmbMesto, 0, 314, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPIB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNazivFirme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(btnDodaj)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        try {
            if (this.operation.equals("INSERT")) {
                this.insert();
            } else if (this.operation.equals("UPDATE")) {
                this.update();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnDodajActionPerformed

    private void FillCmbMesto() {
        try {
            cmbMesto.removeAllItems();
            List<Mesto> mesta = Controller.getInstance().getMestaList();
            for (Mesto mesto : mesta) {
                cmbMesto.addItem(mesto);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greska prilikom ucitavanja mesta!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JComboBox cmbMesto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtAdresa;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtNazivFirme;
    private javax.swing.JTextField txtPIB;
    // End of variables declaration//GEN-END:variables

    private void adjustFields(Skladiste s) {
        txtNaziv.setText(s.getNaziv());
        txtAdresa.setText(s.getAdresa());
        txtPIB.setText(String.valueOf(s.getPIB()));
        txtNazivFirme.setText(s.getNazivFirme());
        cmbMesto.setSelectedItem(s.getMesto());
        this.btnDodaj.setText("Izmeni skladiste");
    }

    private void insert() throws Exception {
        if (txtNaziv.getText().isEmpty() || txtAdresa.getText().isEmpty() || txtPIB.getText().isEmpty() || txtNazivFirme.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate popuniti sva polja!");
            return;
        }

        String naziv = txtNaziv.getText();
        String adresa = txtAdresa.getText();
        Mesto mesto = (Mesto) cmbMesto.getSelectedItem();
        long PIB = Long.parseLong(txtPIB.getText());
        String nazivFirme = txtNazivFirme.getText();

        Skladiste s = new Skladiste();
        s.setNaziv(naziv);
        s.setAdresa(adresa);
        s.setMesto(mesto);
        s.setPIB(PIB);
        s.setNazivFirme(nazivFirme);

        Controller.getInstance().insert(s);
        JOptionPane.showMessageDialog(this, "Uspesno dodato skladiste!", "Uspesno", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(false);
        dispose();
        SkladisteForma form = new SkladisteForma();
        form.setVisible(true);
    }

    private void update() throws Exception {
        if (txtNaziv.getText().isEmpty() || txtAdresa.getText().isEmpty() || txtPIB.getText().isEmpty() || txtNazivFirme.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate popuniti sva polja!");
            return;
        }

        String naziv = txtNaziv.getText();
        String adresa = txtAdresa.getText();
        Mesto mesto = (Mesto) cmbMesto.getSelectedItem();
        long PIB = Long.parseLong(txtPIB.getText());
        String nazivFirme = txtNazivFirme.getText();

        Skladiste s = new Skladiste();
        s.setSifraSkladista(this.s.getSifraSkladista());
        s.setNaziv(naziv);
        s.setAdresa(adresa);
        s.setMesto(mesto);
        s.setPIB(PIB);
        s.setNazivFirme(nazivFirme);

        Controller.getInstance().update(s);
        JOptionPane.showMessageDialog(this, "Uspesno izmenjeno skladiste!", "Uspesno", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(false);
        dispose();
        SkladisteForma form = new SkladisteForma();
        form.setVisible(true);
    }
}
